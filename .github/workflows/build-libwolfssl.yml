name: Cross-compile wolfSSL for ImmortalWrt 24.10.1 x64 with Shared Library

on:
  workflow_dispatch:
    inputs:
      wolfssl_version:
        description: 'wolfSSL version'
        required: true
        default: 'v5.8.0-stable'
        type: string

env:
  WOLFSSL_VERSION: ${{ inputs.wolfssl_version }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential autoconf automake libtool pkg-config \
            wget curl git file unzip zstd xz-utils zlib1g-dev

      - name: Download wolfSSL source
        run: |
          git clone --depth 1 --branch ${WOLFSSL_VERSION} https://github.com/wolfSSL/wolfssl.git
          cd wolfssl
          ./autogen.sh

      - name: Prepare ImmortalWrt SDK
        run: |
          SDK_URL="https://downloads.immortalwrt.org/releases/24.10.1/targets/x86/64/immortalwrt-sdk-24.10.1-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst"
          wget -O sdk.tar.zst $SDK_URL
          tar -I zstd -xf sdk.tar.zst
          SDK_DIR=$(find . -maxdepth 1 -type d -name "immortalwrt-sdk*")
          echo "SDK_PATH=$PWD/$SDK_DIR" >> $GITHUB_ENV

      - name: Setup cross toolchain
        run: |
          cd $SDK_PATH
          TOOLCHAIN=$(find staging_dir -maxdepth 1 -type d -name "toolchain*")
          echo "TOOLCHAIN_PATH=$PWD/$TOOLCHAIN" >> $GITHUB_ENV
          echo "PATH=$PWD/$TOOLCHAIN/bin:$PATH" >> $GITHUB_ENV
          echo "CC=x86_64-openwrt-linux-musl-gcc" >> $GITHUB_ENV
          echo "AR=x86_64-openwrt-linux-musl-ar" >> $GITHUB_ENV
          echo "RANLIB=x86_64-openwrt-linux-musl-ranlib" >> $GITHUB_ENV
          echo "STRIP=x86_64-openwrt-linux-musl-strip" >> $GITHUB_ENV

      - name: Configure build (shared & static)
        working-directory: wolfssl
        run: |
          export PATH="$TOOLCHAIN_PATH/bin:$PATH"
          ./configure \
            --host=x86_64-openwrt-linux-musl \
            --prefix=/usr \
            --enable-shared --enable-static \
            --disable-examples --disable-crypttests \
            CC=x86_64-openwrt-linux-musl-gcc \
            AR=x86_64-openwrt-linux-musl-ar \
            RANLIB=x86_64-openwrt-linux-musl-ranlib \
            CFLAGS="-Os -pipe -fPIC" \
            LDFLAGS="-fPIC"

      - name: Build and install
        working-directory: wolfssl
        run: |
          export PATH="$TOOLCHAIN_PATH/bin:$PATH"
          make -j$(nproc)
          make DESTDIR=$PWD/install install

      - name: Verify shared library
        run: |
          ls install/usr/lib/libwolfssl.so* || exit 1
          x86_64-openwrt-linux-musl-readelf -Ws install/usr/lib/libwolfssl.so | grep wolfssl_ec_diffie_hellman_create

      - name: Package artifacts
        run: |
          mkdir -p artifacts/lib
          cp wolfssl/install/usr/lib/libwolfssl.* artifacts/lib/
          tar -czf wolfssl-${WOLFSSL_VERSION}-x86_64.tar.gz -C artifacts .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wolfssl-${WOLFSSL_VERSION}-x86_64
          path: wolfssl-${WOLFSSL_VERSION}-x86_64.tar.gz
